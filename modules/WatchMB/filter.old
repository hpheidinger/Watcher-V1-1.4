#
# Do NOT edit this file as it is generated every time the module starts
# and provides the 'filter' function
#
filter() {
: FILTER_STATE=Initial
: FILTER_DATE=2025-06-30T16:27:42+02:00
local debugs="@nodebug|@notrace|@alloff|@debug|@debug2|@trace"
local debfun

RULE=SetDebug

if [[ "$REPLY" =~ ($debugs) ]]
then
    debfun=${BASH_REMATCH[1]}	# Extract found matches
    trace "$funtag Debuging $debfun wanted"
    setdebug "$debfun"
    Pattern="$debfun"		# Let the post processor know the choice ...
    return 241   
fi
# ------------- End: debug settings ----------------------------------------
# - 000-Ignore.rule -
# - 010-Scanner.rule
# Special ruleset to catch scanners
# i.e. it does call 'inject' with 5 (= $MAX_AFFAIRS) 
# The next occurence triggers a shoot-down
#
# Alternative to an entry in the module's superfluous_map file
RULE="Shodan-Scanner"
Pattern='.shodan.io['
#---------------
if [[ "$REPLY" =~ "$Pattern" ]]; then inject 5; return $?; fi

RULE="Censys-Scanner"
Pattern='.censys-scanner.com['
#---------------
if [[ "$REPLY" =~ "$Pattern" ]]; then inject 5; return $?; fi

RULE="Cyberresilience-Scanner"
Pattern='.cyberresilience.io['
#---------------
if [[ "$REPLY" =~ "$Pattern" ]]; then inject 5; return $?; fi

RULE="BinaryEdge-Scanner"
Pattern='.binaryedge.ninja['
#---------------
if [[ "$REPLY" =~ "$Pattern" ]]; then inject 5; return $?; fi

RULE=POP3-break-in
Pattern="Error:[pop3]"
#-------
if [[ "$REPLY" =~ "$Pattern" ]]; then inject; return $?; fi

RULE=IMAP-break-in
Pattern="Error:[imap]"
#-------
if [[ "$REPLY" =~ "$Pattern" ]]; then inject; return $?; fi

RULE=SASL-login-failed
Pattern=": SASL LOGIN authentication failed"
if [[ "$REPLY" =~ "$Pattern" ]]; then inject; return $?; fi
#-------

RULE=SASL-plain-failed
Pattern=": SASL PLAIN authentication failed"
if [[ "$REPLY" =~ "$Pattern" ]]; then inject; return $?; fi
#-------

RULE=SASL-MD5_login-failed
Pattern=": SASL CRAM-MD5 authentication failed"
if [[ "$REPLY" =~ "$Pattern" ]]; then inject; return $?; fi
#-------

RULE=SASL_NTLM_authentication_failed
Pattern=": SASL NTLM authentication failed:"
if [[ "$REPLY" =~ "$Pattern" ]]; then inject; return $?; fi
#-------
RULE=NO_RULE_MATCH
return 0
}
