filter() {
: FILTER_STATE=initial
: FILTER_DATE=2025-07-02T20:26:11+02:00
local debugs="@nodebug|@notrace|@alloff|@debug|@debug2|@trace"
local debfun
RULE=SetDebug
if [[ "$REPLY" =~ ($debugs) ]]
then
    debfun=${BASH_REMATCH[1]}	# Extract found matches
    trace "$funtag Debuging $debfun wanted"
    setdebug "$debfun"
    Pattern="$debfun"		# Let the post processor know the choice ...
    return 241   
fi
RULE="LEGAL_LOGIN"
Pattern=': Accepted password for'
if [[ "$REPLY" =~ "$Pattern" ]]; then return 240; fi
RULE="BREAK-IN"
Pattern='POSSIBLE BREAK-IN ATTEMPT'
if [[ "$REPLY" =~ "$Pattern" ]]; then inject; return $?; fi
RULE="Ignore-SSH-DH-mismatch" 
Pattern=': invalid public DH value:'
if [[ "$REPLY" =~ "$Pattern" ]]; then return 254; fi
RULE="Shodan-Scanner"
Pattern='.shodan.io\['
if [[ "$REPLY" =~ "$Pattern" ]]; then inject 5; return $?; fi
RULE="Censys-Scanner"
Pattern='.censys-scanner.com['
if [[ "$REPLY" =~ "$Pattern" ]]; then inject 5; return $?; fi
RULE="Cyberresilience-Scanner"
Pattern='.cyberresilience.io['
if [[ "$REPLY" =~ "$Pattern" ]]; then inject 5; return $?; fi
RULE="BinaryEdge-Scanner"
Pattern='.binaryedge.ninja['
if [[ "$REPLY" =~ "$Pattern" ]]; then inject 5; return $?; fi
RULE=Banner_exchange_invalid
Pattern=': banner exchange:.*: invalid format$'
if [[ "$REPLY" =~ $Pattern ]]; then kickoff; return $?; fi
RULE=Fakehost
Pattern='reverse mapping checking getaddrinfo for .+ \[.+\] failed\.$'
if [[ "$REPLY" =~ $Pattern ]]; then CLASS=FAKEHOST; kickoff; return $?; fi
RULE=Fakehost2
Pattern=', but this does not map back to the address.'
if [[ "$REPLY" =~ "$Pattern" ]]; then CLASS=FAKEHOST; kickoff; return $?; fi
RULE="Bad-SSH-Prot"
Pattern=': Bad protocol version identification'
if [[ "$REPLY" =~ "$Pattern" ]]; then inject; return $?; fi
RULE="Bad-SSH-Nego"
Pattern=': Unable to negotiate with'
if [[ "$REPLY" =~ "$Pattern" ]]; then inject; return $?; fi
RULE=root-login
Pattern=': Failed password for root'
if [[ "$REPLY" =~ "$Pattern" ]]; then inject 3; return $?; fi
RULE="NonPriv-login-pwd"
Pattern=': Failed password for invalid user'
if [[ "$REPLY" =~ "$Pattern" ]]; then inject; return $?; fi
RULE="NonPriv-login-none"
Pattern=': Failed none for invalid user'
if [[ "$REPLY" =~ "$Pattern" ]]; then inject; return $?; fi
RULE="Invalid-user"
Pattern=': Invalid user'
if [[ "$REPLY" =~ "$Pattern" ]]; then inject; return $?; fi
RULE="NonPriv-failed-existing"
Pattern=': Failed password for'
if [[ "$REPLY" =~ "$Pattern" ]]; then inject; return $?; fi
RULE="SSH-fatal-dispatch"
Pattern=': ssh_dispatch_run_fatal:'
if [[ "$REPLY" =~ "$Pattern" ]]; then inject; return $?; fi
RULE=NO_RULE_MATCH
return 0
}
